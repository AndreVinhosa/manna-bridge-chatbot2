import { NextApiRequest, NextApiResponse } from 'next'

interface ContactForm {
  name: string
  email: string
  message: string
}

export default async function handler(req: NextApiRequest, res: NextApiResponse) {
  if (req.method !== 'POST') {
    return res.status(405).json({ error: 'Method not allowed' })
  }

  try {
    const { name, email, message }: ContactForm = req.body
    
    if (!name || !email) {
      return res.status(400).json({ 
        success: false, 
        error: 'Nome e email s√£o obrigat√≥rios' 
      })
    }

    // Valida√ß√£o de email b√°sica
    const emailRegex = /^[^\s@]+@[^\s@]+\.[^\s@]+$/
    if (!emailRegex.test(email)) {
      return res.status(400).json({ 
        success: false, 
        error: 'Email inv√°lido' 
      })
    }

    // Em produ√ß√£o, aqui voc√™ salvaria no banco de dados ou enviaria por email
    // Por enquanto, apenas simulamos o salvamento
    console.log('Novo contato recebido:', { name, email, message, timestamp: new Date().toISOString() })
    
    // Resposta personalizada baseada no conte√∫do
    let responseMessage = 'üôè Obrigado por entrar em contato, ' + name + '! '
    
    if (message.toLowerCase().includes('mission√°rio') || message.toLowerCase().includes('miss√£o')) {
      responseMessage += 'Nossa equipe de apoio a mission√°rios entrar√° em contato em at√© 24 horas para te orientar sobre como podemos apoiar sua miss√£o. '
    } else if (message.toLowerCase().includes('apoiar') || message.toLowerCase().includes('contribuir')) {
      responseMessage += 'Nossa equipe de relacionamento com mantenedores entrar√° em contato em at√© 24 horas para te mostrar como voc√™ pode fazer parte da obra mission√°ria. '
    } else {
      responseMessage += 'Nossa equipe entrar√° em contato em at√© 24 horas para te ajudar da melhor forma poss√≠vel. '
    }
    
    responseMessage += '\n\n"Porque onde estiver o vosso tesouro, a√≠ estar√° tamb√©m o vosso cora√ß√£o." - Mateus 6:21\n\nüíù Que Deus aben√ßoe voc√™!'

    res.status(200).json({
      success: true,
      message: responseMessage
    })
  } catch (error) {
    console.error('Contact API error:', error)
    res.status(500).json({ 
      success: false, 
      error: 'Erro ao salvar contato. Tente novamente.' 
    })
  }
}
